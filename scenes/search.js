////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// MODULE PREREQUISITS //////////////////////////////////////////////////////////////////////////////

const { messages	  	  }	= require('../speech');
const { SOURCE_ID		  } = require('../constants');
const 	name 				= module.filename.match(/\b([a-z0-9_-]+)\.js$/i)[1];
const   trace      			= require('../../../tracer').create({ title: `[SCENE ${name}]`, source: SOURCE_ID });
const 	Scene 				= require('telegraf/scenes/base');
const	scene_search 		= new Scene(name);





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////// Сцена проверки регистрационных данных

scene_search.enter(ctx => {

	return ctx.user.apartments.then(result => {

		switch (result.length) {

			case 0:  return ctx.reply('Вы пока не зарегистрированы в шахматке. Пожалуйста, отправьте мне номер вашей квартиры для регистрации');
			case 1:  return ctx.reply(`Ваша квартира: ${result.map(i => i.id).join(', ')}`);
			default: return ctx.reply(`Ваши квартиры: ${result.map(i => i.id).join(', ')}`);
		}
	})
	.catch(err => trace("SEARCH ERROR", err.message, err, ctx.user));
});


scene_search.on('message', ctx => {

	return ctx.reply(`SEARCH SESSION: ${JSON.stringify(ctx.session)}`).then(() => ctx.scene.leave());
});





////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// MODULE EXPORTS ///////////////////////////////////////////////////////////////////////////////////

module.exports = scene_search